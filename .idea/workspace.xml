<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AnalysisUIOptions">
    <option name="SCOPE_TYPE" value="8" />
    <option name="CUSTOM_SCOPE_NAME" value="test" />
  </component>
  <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true">
    <generated>
      <config projectName="uav_sim" targetName="gtest" />
      <config projectName="uav_sim" targetName="uav_sim" />
      <config projectName="uav_sim" targetName="Google_Tests_run" />
      <config projectName="uav_sim" targetName="gmock" />
      <config projectName="uav_sim" targetName="gmock_main" />
      <config projectName="uav_sim" targetName="MissionsCore" />
      <config projectName="uav_sim" targetName="Network_Models_Core" />
      <config projectName="uav_sim" targetName="gtest_main" />
      <config projectName="uav_sim" targetName="DronesCore" />
    </generated>
  </component>
  <component name="CMakeSettings" AUTO_RELOAD="true">
    <configurations>
      <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b42670ab-4f1b-442c-9d86-c87fd38f17f7" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Google_test/Test_Class_Network.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Google_test/Test_Class_Network.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Google_test/Test_Class_Node.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Google_test/Test_Class_Node.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Network_Models/Link.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Network_Models/Link.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Network_Models/Link.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Network_Models/Link.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Network_Models/Network.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Network_Models/Network.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Network_Models/Node.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Network_Models/Node.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Network_Models/Node.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Network_Models/Node.h" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="FavoritesManager">
    <favorites_list name="uav_sim" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="CMakeLists.txt" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="NamedScopeManager">
    <scope name="test" pattern="!file[untitled]:Google_test/*" />
  </component>
  <component name="OCFindUsagesOptions" text="true" ivars="false" properties="true" derivedClasses="false" />
  <component name="ProjectId" id="1SDFlcziQuax3be9mWcc1evfASK" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="TODO_SCOPE" value="All Places" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="cf.advertisement.text.has.clang-format" value="true" />
    <property name="last_opened_file_path" value="$USER_HOME$/Desktop/TrafficTool" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="run.code.analysis.last.selected.profile" value="pProject Default" />
    <property name="settings.editor.selected.configurable" value="project.propVCSSupport.Issue.Navigation" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\johnm\CLionProjects\uav_sim\src\drones" />
      <recent name="C:\Users\johnm\CLionProjects\uav_sim\src" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Google Test.All in Test_Class_Link.cpp and 2 more">
    <configuration name="All in Test_Class_Link.cpp and 1 more" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" temporary="true" PASS_PARENT_ENVS_2="true" PROJECT_NAME="uav_sim" TARGET_NAME="Google_Tests_run" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="uav_sim" RUN_TARGET_NAME="Google_Tests_run" TEST_PATTERN="all-tests(file://$PROJECT_DIR$/src/Google_test/Test_Class_Link.cpp):all-tests(file://$PROJECT_DIR$/src/Google_test/Test_Class_Node.cpp)" TEST_MODE="PATTERN">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="All in Test_Class_Link.cpp and 2 more" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" temporary="true" PASS_PARENT_ENVS_2="true" PROJECT_NAME="uav_sim" TARGET_NAME="Google_Tests_run" RUN_TARGET_PROJECT_NAME="uav_sim" RUN_TARGET_NAME="Google_Tests_run" TEST_PATTERN="all-tests(file://$PROJECT_DIR$/src/Google_test/Test_Class_Link.cpp):all-tests(file://$PROJECT_DIR$/src/Google_test/Test_Class_Network.cpp):all-tests(file://$PROJECT_DIR$/src/Google_test/Test_Class_Node.cpp)" TEST_MODE="PATTERN">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="All in Test_Class_Link.cpp" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" temporary="true" PASS_PARENT_ENVS_2="true" PROJECT_NAME="uav_sim" TARGET_NAME="Google_Tests_run" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="uav_sim" RUN_TARGET_NAME="Google_Tests_run" TEST_PATTERN="all-tests(file://$PROJECT_DIR$/src/Google_test/Test_Class_Link.cpp)" TEST_MODE="PATTERN">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="All in Test_Class_Network.cpp" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" temporary="true" PASS_PARENT_ENVS_2="true" PROJECT_NAME="uav_sim" TARGET_NAME="Google_Tests_run" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="uav_sim" RUN_TARGET_NAME="Google_Tests_run" TEST_PATTERN="all-tests(file://$PROJECT_DIR$/src/Google_test/Test_Class_Network.cpp)" TEST_MODE="PATTERN">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="All in Test_Class_Node.cpp" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" temporary="true" PASS_PARENT_ENVS_2="true" PROJECT_NAME="uav_sim" TARGET_NAME="Google_Tests_run" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="uav_sim" RUN_TARGET_NAME="Google_Tests_run" TEST_PATTERN="all-tests(file://$PROJECT_DIR$/src/Google_test/Test_Class_Node.cpp)" TEST_MODE="PATTERN">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DronesCore" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="uav_sim" TARGET_NAME="DronesCore" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Google_Tests_run" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="uav_sim" TARGET_NAME="Google_Tests_run" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="uav_sim" RUN_TARGET_NAME="Google_Tests_run">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MissionsCore" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="uav_sim" TARGET_NAME="MissionsCore" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Network_Models_Core" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="uav_sim" TARGET_NAME="Network_Models_Core" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gmock" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="uav_sim" TARGET_NAME="gmock" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gmock_main" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="uav_sim" TARGET_NAME="gmock_main" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gtest" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="uav_sim" TARGET_NAME="gtest" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gtest_main" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="uav_sim" TARGET_NAME="gtest_main" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="uav_sim" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="uav_sim" TARGET_NAME="uav_sim" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="uav_sim" RUN_TARGET_NAME="uav_sim">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CMake Application.uav_sim" />
      <item itemvalue="CMake Application.DronesCore" />
      <item itemvalue="CMake Application.Google_Tests_run" />
      <item itemvalue="CMake Application.gmock" />
      <item itemvalue="CMake Application.gmock_main" />
      <item itemvalue="CMake Application.gtest" />
      <item itemvalue="CMake Application.gtest_main" />
      <item itemvalue="CMake Application.MissionsCore" />
      <item itemvalue="CMake Application.Network_Models_Core" />
      <item itemvalue="Google Test.All in Test_Class_Link.cpp" />
      <item itemvalue="Google Test.All in Test_Class_Node.cpp" />
      <item itemvalue="Google Test.All in Test_Class_Link.cpp and 1 more" />
      <item itemvalue="Google Test.All in Test_Class_Network.cpp" />
      <item itemvalue="Google Test.All in Test_Class_Link.cpp and 2 more" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Google Test.All in Test_Class_Link.cpp and 2 more" />
        <item itemvalue="Google Test.All in Test_Class_Network.cpp" />
        <item itemvalue="Google Test.All in Test_Class_Node.cpp" />
        <item itemvalue="Google Test.All in Test_Class_Link.cpp and 1 more" />
        <item itemvalue="Google Test.All in Test_Class_Link.cpp" />
      </list>
    </recent_temporary>
  </component>
  <component name="StructureViewFactory">
    <option name="ACTIVE_ACTIONS" value=",INHERITORS_AND_CATEGORIES" />
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="b42670ab-4f1b-442c-9d86-c87fd38f17f7" name="Default Changelist" comment="" />
      <created>1571090411994</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1571090411994</updated>
      <workItem from="1571090414345" duration="1517000" />
      <workItem from="1571091946743" duration="13857000" />
      <workItem from="1571157829240" duration="6252000" />
      <workItem from="1571175632261" duration="10226000" />
      <workItem from="1571217049162" duration="2748000" />
      <workItem from="1571247381803" duration="23976000" />
      <workItem from="1571351575319" duration="18410000" />
      <workItem from="1571479868917" duration="3971000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/src/main.cpp</url>
          <line>83</line>
          <option name="timeStamp" value="18" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/src/Google_test/Test_Class_Network.cpp</url>
          <line>110</line>
          <option name="timeStamp" value="27" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/src/Network_Models/Network.cpp</url>
          <line>121</line>
          <option name="timeStamp" value="29" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/src/Network_Models/Link.cpp</url>
          <line>45</line>
          <option name="timeStamp" value="30" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>